# Define a type to accept a string that is a base64 encoded rep of a PEM CSR
# generated by an openssl req command.
# The output from the openssl req is serialized to make it palatable by facter.
define certs_to_sign::x509_csr(
  String               $csr,
  Stdlib::Absolutepath $cpath = '/var/www/html/certs',
  String               $sign_exec = '/root/sign_csr.sh',
) {

  # puppetlabs/stdlib provides a base64 decode function - yay!
  # last param in ['default','strict','urlsafe']
  $real_csr = base64('decode', $csr, 'default')

  # now that we have a real PEM CSR, lets drop it into an exported file resource
  file { "${cpath}/${title}.csr":
    ensure  => 'file',
    mode    => '0644',
    content => $real_csr,
    notify  => Exec["${sign_exec} ${cpath}/${title}.csr"],
  }

  exec { "${sign_exec} ${cpath}/${title}.csr":
    creates     => [
      "${cpath}/${title}.crt",
      "${cpath}/${title}.p12",
    ]
    refreshonly => true,
  }
}
